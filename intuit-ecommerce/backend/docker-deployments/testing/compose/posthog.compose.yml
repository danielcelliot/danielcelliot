#
services:

  clickhouse:
    image: clickhouse/clickhouse-server:22.8
    container_name: clickhouse
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    # network_mode: host
    # ports:
    #   - 8123:8123
    #   - 9000:9000
    #   - 9440:9440
    #   - 9009:9009
    volumes:
      - ./posthog/posthog/idl:/idl
      - ./posthog/docker/clickhouse/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./posthog/docker/clickhouse/config.xml:/etc/clickhouse-server/config.xml
      - ./posthog/docker/clickhouse/users.xml:/etc/clickhouse-server/users.xml
      - clickhouse-data:/var/lib/clickhouse
    depends_on:
      - kafka
      - zookeeper
    restart: 'no'

  db:
    image: postgres:12-alpine
    container_name: db
    environment:
      POSTGRES_USER: posthog
      POSTGRES_DB: posthog
      POSTGRES_PASSWORD: posthog
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: 'no'

  redis:
    image: redis:6.2.7-alpine
    container_name: redis
    command: redis-server --maxmemory-policy allkeys-lru --maxmemory 200mb
    ports:
      - 6379:6379
    restart: 'no'

  zookeeper:
    image: zookeeper:3.7.0
    container_name: zookeeper
    volumes:
      - zookeeper-datalog:/datalog
      - zookeeper-data:/data
      - zookeeper-logs:/logs
    restart: 'no'

  kafka:
    image: bitnami/kafka:2.8.1-debian-10-r99
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1001
      KAFKA_CFG_RESERVED_BROKER_MAX_ID: 1001
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: true
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    restart: 'no'

  worker: &worker
    image: posthog/posthog:latest
    container_name: worker
    command: ./bin/docker-worker-celery --with-scheduler
    environment:
      DISABLE_SECURE_SSL_REDIRECT: true
      IS_BEHIND_PROXY: true
      DATABASE_URL: postgres://posthog:posthog@db:5432/posthog
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_DATABASE: posthog
      CLICKHOUSE_SECURE: false
      CLICKHOUSE_VERIFY: false
      KAFKA_URL: kafka://kafka
      REDIS_URL: redis://redis:6379/
      PGHOST: db
      PGUSER: posthog
      PGPASSWORD: posthog
      DEPLOYMENT: hobby
      SENTRY_DSN: $SENTRY_DSN
      SITE_URL: http://localhost
      SECRET_KEY: this_is_a_test
    depends_on:
      - db
      - redis
      - clickhouse
      - kafka
      - object_storage
    restart: 'no'

  web:
    <<: *worker
    image: posthog/posthog:latest
    container_name: web
    command: /compose/start
    ports:
        - 8080:8080
    volumes:
      - ./posthog/compose:/compose
    restart: 'no'

  asyncmigrationscheck:
    <<: *worker
    image: posthog/posthog:latest
    container_name: asyncmigrationscheck
    command: python manage.py run_async_migrations --check
    deploy:
      replicas: 0
    restart: 'no'

  plugins:
    image: posthog/posthog:latest
    container_name: plugins
    command: ./bin/plugin-server --'no'-restart-loop
    environment:
      DATABASE_URL: postgres://posthog:posthog@db:5432/posthog
      KAFKA_HOSTS: kafka:9092
      REDIS_URL: redis://redis:6379/
      CLICKHOUSE_HOST: clickhouse
      SENTRY_DSN: $SENTRY_DSN
      SITE_URL: http://localhost
      SECRET_KEY: this_is_a_test
    depends_on:
      - db
      - redis
      - clickhouse
      - kafka
      - object_storage
    restart: 'no'

  caddy:
    image: caddy:2.6.1
    container_name: caddy
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./posthog/Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      - web
    restart: 'no'

  object_storage:
    image: minio/minio:RELEASE.2022-06-25T15-50-16Z
    container_name: object_storage
    entrypoint: sh
    command: -c 'mkdir -p /data/posthog && minio server --address ":19000" --console-address ":19001" /data' # create the 'posthog' bucket before starting the service
    environment:
      MINIO_ROOT_USER: object_storage_root_user
      MINIO_ROOT_PASSWORD: object_storage_root_password
    ports:
      - 19000:19000
      - 19001:19001
    volumes:
      - object_storage:/data
    restart: 'no'

volumes:
  zookeeper-data:
  zookeeper-datalog:
  zookeeper-logs:
  object_storage:
  postgres-data:
  clickhouse-data:
